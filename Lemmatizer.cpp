/****************************************************************************
**
** Metadata for LEMMATIZERLib generated by dumpcpp v5.9.9 using
** dumpcpp Lemmatizer.tlb -o Lemmatizer
** from the type library Lemmatizer.tlb
**
****************************************************************************/

#define QAX_DUMPCPP_LEMMATIZERLIB_NOINLINES
#include "Lemmatizer.h"

using namespace LEMMATIZERLib;

struct qt_meta_stringdata_all_t {
    QByteArrayData data[81];
    char stringdata0[1160];
};
#define QT_MOC_LITERAL(idx, ofs, len, table) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_all_t, stringdata##table) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_all_t qt_meta_stringdata_all = {
    {
QT_MOC_LITERAL(0, 0, 23, 0),
QT_MOC_LITERAL(1, 24, 11, 0),
QT_MOC_LITERAL(2, 36, 9, 0),
QT_MOC_LITERAL(3, 46, 9, 0),
QT_MOC_LITERAL(4, 56, 0, 0),
QT_MOC_LITERAL(5, 57, 4, 0),
QT_MOC_LITERAL(6, 62, 6, 0),
QT_MOC_LITERAL(7, 69, 4, 0),
QT_MOC_LITERAL(8, 74, 4, 0),
QT_MOC_LITERAL(9, 79, 15, 0),
QT_MOC_LITERAL(10, 95, 4, 0),
QT_MOC_LITERAL(11, 100, 6, 0),
QT_MOC_LITERAL(12, 107, 4, 0),
QT_MOC_LITERAL(13, 112, 4, 0),
QT_MOC_LITERAL(14, 117, 6, 0),
QT_MOC_LITERAL(15, 124, 3, 0),
QT_MOC_LITERAL(16, 128, 6, 0),
QT_MOC_LITERAL(17, 135, 4, 0),
QT_MOC_LITERAL(18, 140, 21, 0),
QT_MOC_LITERAL(19, 162, 10, 0),
QT_MOC_LITERAL(20, 173, 5, 0),
QT_MOC_LITERAL(21, 179, 7, 0),
QT_MOC_LITERAL(22, 187, 13, 0),
QT_MOC_LITERAL(23, 201, 17, 0),
QT_MOC_LITERAL(24, 219, 4, 0),
QT_MOC_LITERAL(25, 224, 10, 0),
QT_MOC_LITERAL(26, 235, 9, 0),
QT_MOC_LITERAL(27, 245, 7, 0),
QT_MOC_LITERAL(28, 253, 10, 0),
QT_MOC_LITERAL(29, 264, 10, 0),
QT_MOC_LITERAL(30, 275, 43, 0),
QT_MOC_LITERAL(31, 319, 10, 0),
QT_MOC_LITERAL(32, 330, 11, 0),
QT_MOC_LITERAL(33, 342, 13, 0),
QT_MOC_LITERAL(34, 356, 24, 0),
QT_MOC_LITERAL(35, 381, 7, 0),
QT_MOC_LITERAL(36, 389, 33, 0),
QT_MOC_LITERAL(37, 423, 19, 0),
QT_MOC_LITERAL(38, 443, 4, 0),
QT_MOC_LITERAL(39, 448, 10, 0),
QT_MOC_LITERAL(40, 459, 34, 0),
QT_MOC_LITERAL(41, 494, 32, 0),
QT_MOC_LITERAL(42, 527, 11, 0),
QT_MOC_LITERAL(43, 539, 8, 0),
QT_MOC_LITERAL(44, 548, 4, 0),
QT_MOC_LITERAL(45, 553, 32, 0),
QT_MOC_LITERAL(46, 586, 20, 0),
QT_MOC_LITERAL(47, 607, 7, 0),
QT_MOC_LITERAL(48, 615, 13, 0),
QT_MOC_LITERAL(49, 629, 32, 0),
QT_MOC_LITERAL(50, 662, 20, 0),
QT_MOC_LITERAL(51, 683, 2, 0),
QT_MOC_LITERAL(52, 686, 24, 0),
QT_MOC_LITERAL(53, 711, 21, 0),
QT_MOC_LITERAL(54, 733, 4, 0),
QT_MOC_LITERAL(55, 738, 20, 0),
QT_MOC_LITERAL(56, 759, 17, 0),
QT_MOC_LITERAL(57, 777, 15, 0),
QT_MOC_LITERAL(58, 793, 12, 0),
QT_MOC_LITERAL(59, 806, 26, 0),
QT_MOC_LITERAL(60, 833, 32, 0),
QT_MOC_LITERAL(61, 866, 31, 0),
QT_MOC_LITERAL(62, 898, 32, 0),
QT_MOC_LITERAL(63, 931, 18, 0),
QT_MOC_LITERAL(64, 950, 16, 0),
QT_MOC_LITERAL(65, 967, 12, 0),
QT_MOC_LITERAL(66, 980, 4, 0),
QT_MOC_LITERAL(67, 985, 5, 0),
QT_MOC_LITERAL(68, 991, 9, 0),
QT_MOC_LITERAL(69, 1001, 9, 0),
QT_MOC_LITERAL(70, 1011, 14, 0),
QT_MOC_LITERAL(71, 1026, 18, 0),
QT_MOC_LITERAL(72, 1045, 9, 0),
QT_MOC_LITERAL(73, 1055, 15, 0),
QT_MOC_LITERAL(74, 1071, 14, 0),
QT_MOC_LITERAL(75, 1086, 6, 0),
QT_MOC_LITERAL(76, 1093, 10, 0),
QT_MOC_LITERAL(77, 1104, 8, 0),
QT_MOC_LITERAL(78, 1113, 7, 0),
QT_MOC_LITERAL(79, 1121, 3, 0),
QT_MOC_LITERAL(80, 1125, 33, 0)
    },
    "LEMMATIZERLib::Paradigm\0Interface 0\0IParadigm\0exception\0\0code\0source\0disc\0"
    "help\0propertyChanged\0name\0signal\0argc\0argv\0Accent\0pos\0Ancode\0Form\0"
    "HomonymWeightWithForm\0BaseLength\0Count\0Founded\0HomonymWeight\0LemmaPrefixLength\0"
    "Norm\0ParadigmID\0SrcAncode\0SrcNorm\0TypeAncode\0WordWeight\0"
    "__MIDL___MIDL_itf_Lemmatizer_0000_0000_0001\0idlFinance\0idlComputer\0idlLiterature\0"
    "LEMMATIZERLib::IParadigm\0control\0LEMMATIZERLib::ParadigmCollection\0"
    "IParadigmCollection\0Item\0IParadigm*\0LEMMATIZERLib::IParadigmCollection\0"
    "LEMMATIZERLib::LemmatizerRussian\0ILemmatizer\0CheckABC\0Word\0"
    "CreateParadigmCollectionFromForm\0IParadigmCollection*\0capital\0UsePrediction\0"
    "CreateParadigmCollectionFromNorm\0CreateParadigmFromID\0id\0LoadDictionariesRegistry\0"
    "LoadStatisticRegistry\0subj\0SetMaximalPrediction\0MaximalPrediction\0SetUseStatistic\0"
    "UseStatistic\0LEMMATIZERLib::ILemmatizer\0LEMMATIZERLib::LemmatizerEnglish\0"
    "LEMMATIZERLib::LemmatizerGerman\0LEMMATIZERLib::PLMLineCollection\0IPLMLineCollection\0"
    "AttachLemmatizer\0ILemmatizer*\0pVal\0Clear\0CopyItems\0IUnknown*\0piPlmLinesFrom\0"
    "ProcessHyphenWords\0piGraphan\0ProcessPlmLines\0piGraphmatFile\0Remove\0SaveToFile\0"
    "filename\0SetItem\0rhs\0LEMMATIZERLib::IPLMLineCollection\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_LEMMATIZERLib__Paradigm[] = {

 // content:
    7, // revision
    0,  // classname
    1, 14, // classinfo
    7, 16, // methods
    11, 82, // properties
    1, 115, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 2, 

// signal: name, argc, parameters, tag, flags
    3, 4, 51, 4, 5,
    9, 1, 60, 4, 5,
    11, 3, 63, 4, 5,

// slot: name, argc, parameters, tag, flags
    14, 1, 70, 4, 9,
    16, 1, 73, 4, 9,
    17, 1, 76, 4, 9,
    18, 1, 79, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::UInt, QMetaType::UInt, 15,
    QMetaType::QString, QMetaType::UInt, 15,
    QMetaType::QString, QMetaType::UInt, 15,
    QMetaType::Int, QMetaType::UInt, 15,

 // properties: name, type, flags
    19, QMetaType::UInt, 0x03005001, 		 // uint BaseLength
    20, QMetaType::UInt, 0x03005001, 		 // uint Count
    21, QMetaType::Int, 0x02005001, 		 // int Founded
    22, QMetaType::Int, 0x02005001, 		 // int HomonymWeight
    23, QMetaType::Int, 0x02005001, 		 // int LemmaPrefixLength
    24, QMetaType::QString, 0x0a005001, 		 // QString Norm
    25, QMetaType::UInt, 0x03005001, 		 // uint ParadigmID
    26, QMetaType::QString, 0x0a005001, 		 // QString SrcAncode
    27, QMetaType::QString, 0x0a005001, 		 // QString SrcNorm
    28, QMetaType::QString, 0x0a005001, 		 // QString TypeAncode
    29, QMetaType::Int, 0x02005001, 		 // int WordWeight

 // enums: name, flags, count, data
    30, 0x0, 3, 119, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject Paradigm::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__Paradigm, 0, 0, 0 }
};

void *Paradigm::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::Paradigm"))
        return static_cast<void*>(const_cast<Paradigm*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__IParadigm[] = {

 // content:
    7, // revision
    34,  // classname
    0, 0, // classinfo
    7, 14, // methods
    12, 80, // properties
    1, 116, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

// signal: name, argc, parameters, tag, flags
    3, 4, 49, 4, 5,
    9, 1, 58, 4, 5,
    11, 3, 61, 4, 5,

// slot: name, argc, parameters, tag, flags
    14, 1, 68, 4, 9,
    16, 1, 71, 4, 9,
    17, 1, 74, 4, 9,
    18, 1, 77, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::UInt, QMetaType::UInt, 15,
    QMetaType::QString, QMetaType::UInt, 15,
    QMetaType::QString, QMetaType::UInt, 15,
    QMetaType::Int, QMetaType::UInt, 15,

 // properties: name, type, flags
    19, QMetaType::UInt, 0x03005001, 		 // uint BaseLength
    20, QMetaType::UInt, 0x03005001, 		 // uint Count
    21, QMetaType::Int, 0x02005001, 		 // int Founded
    22, QMetaType::Int, 0x02005001, 		 // int HomonymWeight
    23, QMetaType::Int, 0x02005001, 		 // int LemmaPrefixLength
    24, QMetaType::QString, 0x0a005001, 		 // QString Norm
    25, QMetaType::UInt, 0x03005001, 		 // uint ParadigmID
    26, QMetaType::QString, 0x0a005001, 		 // QString SrcAncode
    27, QMetaType::QString, 0x0a005001, 		 // QString SrcNorm
    28, QMetaType::QString, 0x0a005001, 		 // QString TypeAncode
    29, QMetaType::Int, 0x02005001, 		 // int WordWeight
    35, QMetaType::QString, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
    30, 0x0, 3, 120, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject IParadigm::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__IParadigm, 0, 0, 0 }
};

void *IParadigm::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::IParadigm"))
        return static_cast<void*>(const_cast<IParadigm*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__ParadigmCollection[] = {

 // content:
    7, // revision
    36,  // classname
    1, 14, // classinfo
    4, 16, // methods
    1, 58, // properties
    1, 61, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 37, 

// signal: name, argc, parameters, tag, flags
    3, 4, 36, 4, 5,
    9, 1, 45, 4, 5,
    11, 3, 48, 4, 5,

// slot: name, argc, parameters, tag, flags
    38, 1, 55, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    0x80000000 | 39, QMetaType::Int, 15,

 // properties: name, type, flags
    20, QMetaType::Int, 0x02005001, 		 // int Count

 // enums: name, flags, count, data
    30, 0x0, 3, 65, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject ParadigmCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__ParadigmCollection, 0, 0, 0 }
};

void *ParadigmCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::ParadigmCollection"))
        return static_cast<void*>(const_cast<ParadigmCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__IParadigmCollection[] = {

 // content:
    7, // revision
    40,  // classname
    0, 0, // classinfo
    4, 14, // methods
    2, 56, // properties
    1, 62, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

// signal: name, argc, parameters, tag, flags
    3, 4, 34, 4, 5,
    9, 1, 43, 4, 5,
    11, 3, 46, 4, 5,

// slot: name, argc, parameters, tag, flags
    38, 1, 53, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    0x80000000 | 39, QMetaType::Int, 15,

 // properties: name, type, flags
    20, QMetaType::Int, 0x02005001, 		 // int Count
    35, QMetaType::QString, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
    30, 0x0, 3, 66, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject IParadigmCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__IParadigmCollection, 0, 0, 0 }
};

void *IParadigmCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::IParadigmCollection"))
        return static_cast<void*>(const_cast<IParadigmCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__LemmatizerRussian[] = {

 // content:
    7, // revision
    41,  // classname
    1, 14, // classinfo
    11, 16, // methods
    2, 120, // properties
    1, 126, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 42, 

// signal: name, argc, parameters, tag, flags
    3, 4, 71, 4, 5,
    9, 1, 80, 4, 5,
    11, 3, 83, 4, 5,

// slot: name, argc, parameters, tag, flags
    43, 1, 90, 4, 9,
    45, 3, 93, 4, 9,
    49, 3, 100, 4, 9,
    50, 1, 107, 4, 9,
    52, 0, 110, 4, 9,
    53, 1, 111, 4, 9,
    55, 1, 114, 4, 9,
    57, 1, 117, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Int, QMetaType::QString, 44,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 17, 47, 48,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 24, 47, 48,
    0x80000000 | 39, QMetaType::Int, 51,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 30, 54,
    QMetaType::Void, QMetaType::Int, 56,
    QMetaType::Void, QMetaType::Int, 58,

 // properties: name, type, flags
    56, QMetaType::Int, 0x02015003, 		 // int MaximalPrediction
    58, QMetaType::Int, 0x02015003, 		 // int UseStatistic

 // enums: name, flags, count, data
    30, 0x0, 3, 130, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject LemmatizerRussian::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__LemmatizerRussian, 0, 0, 0 }
};

void *LemmatizerRussian::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::LemmatizerRussian"))
        return static_cast<void*>(const_cast<LemmatizerRussian*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__ILemmatizer[] = {

 // content:
    7, // revision
    59,  // classname
    0, 0, // classinfo
    11, 14, // methods
    3, 118, // properties
    1, 127, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

// signal: name, argc, parameters, tag, flags
    3, 4, 69, 4, 5,
    9, 1, 78, 4, 5,
    11, 3, 81, 4, 5,

// slot: name, argc, parameters, tag, flags
    43, 1, 88, 4, 9,
    45, 3, 91, 4, 9,
    49, 3, 98, 4, 9,
    50, 1, 105, 4, 9,
    52, 0, 108, 4, 9,
    53, 1, 109, 4, 9,
    55, 1, 112, 4, 9,
    57, 1, 115, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Int, QMetaType::QString, 44,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 17, 47, 48,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 24, 47, 48,
    0x80000000 | 39, QMetaType::Int, 51,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 30, 54,
    QMetaType::Void, QMetaType::Int, 56,
    QMetaType::Void, QMetaType::Int, 58,

 // properties: name, type, flags
    56, QMetaType::Int, 0x02015003, 		 // int MaximalPrediction
    58, QMetaType::Int, 0x02015003, 		 // int UseStatistic
    35, QMetaType::QString, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
    30, 0x0, 3, 131, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject ILemmatizer::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__ILemmatizer, 0, 0, 0 }
};

void *ILemmatizer::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::ILemmatizer"))
        return static_cast<void*>(const_cast<ILemmatizer*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__LemmatizerEnglish[] = {

 // content:
    7, // revision
    60,  // classname
    1, 14, // classinfo
    11, 16, // methods
    2, 120, // properties
    1, 126, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 42, 

// signal: name, argc, parameters, tag, flags
    3, 4, 71, 4, 5,
    9, 1, 80, 4, 5,
    11, 3, 83, 4, 5,

// slot: name, argc, parameters, tag, flags
    43, 1, 90, 4, 9,
    45, 3, 93, 4, 9,
    49, 3, 100, 4, 9,
    50, 1, 107, 4, 9,
    52, 0, 110, 4, 9,
    53, 1, 111, 4, 9,
    55, 1, 114, 4, 9,
    57, 1, 117, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Int, QMetaType::QString, 44,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 17, 47, 48,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 24, 47, 48,
    0x80000000 | 39, QMetaType::Int, 51,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 30, 54,
    QMetaType::Void, QMetaType::Int, 56,
    QMetaType::Void, QMetaType::Int, 58,

 // properties: name, type, flags
    56, QMetaType::Int, 0x02015003, 		 // int MaximalPrediction
    58, QMetaType::Int, 0x02015003, 		 // int UseStatistic

 // enums: name, flags, count, data
    30, 0x0, 3, 130, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject LemmatizerEnglish::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__LemmatizerEnglish, 0, 0, 0 }
};

void *LemmatizerEnglish::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::LemmatizerEnglish"))
        return static_cast<void*>(const_cast<LemmatizerEnglish*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__LemmatizerGerman[] = {

 // content:
    7, // revision
    61,  // classname
    1, 14, // classinfo
    11, 16, // methods
    2, 120, // properties
    1, 126, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 42, 

// signal: name, argc, parameters, tag, flags
    3, 4, 71, 4, 5,
    9, 1, 80, 4, 5,
    11, 3, 83, 4, 5,

// slot: name, argc, parameters, tag, flags
    43, 1, 90, 4, 9,
    45, 3, 93, 4, 9,
    49, 3, 100, 4, 9,
    50, 1, 107, 4, 9,
    52, 0, 110, 4, 9,
    53, 1, 111, 4, 9,
    55, 1, 114, 4, 9,
    57, 1, 117, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Int, QMetaType::QString, 44,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 17, 47, 48,
    0x80000000 | 46, QMetaType::QString, QMetaType::Int, QMetaType::Int, 24, 47, 48,
    0x80000000 | 39, QMetaType::Int, 51,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 30, 54,
    QMetaType::Void, QMetaType::Int, 56,
    QMetaType::Void, QMetaType::Int, 58,

 // properties: name, type, flags
    56, QMetaType::Int, 0x02015003, 		 // int MaximalPrediction
    58, QMetaType::Int, 0x02015003, 		 // int UseStatistic

 // enums: name, flags, count, data
    30, 0x0, 3, 130, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject LemmatizerGerman::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__LemmatizerGerman, 0, 0, 0 }
};

void *LemmatizerGerman::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::LemmatizerGerman"))
        return static_cast<void*>(const_cast<LemmatizerGerman*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__PLMLineCollection[] = {

 // content:
    7, // revision
    62,  // classname
    1, 14, // classinfo
    12, 16, // methods
    1, 122, // properties
    1, 125, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

 // classinfo: key, value
    1, 63, 

// signal: name, argc, parameters, tag, flags
    3, 4, 76, 4, 5,
    9, 1, 85, 4, 5,
    11, 3, 88, 4, 5,

// slot: name, argc, parameters, tag, flags
    64, 1, 95, 4, 9,
    67, 0, 98, 4, 9,
    68, 1, 99, 4, 9,
    38, 1, 102, 4, 9,
    71, 1, 105, 4, 9,
    73, 1, 108, 4, 9,
    75, 1, 111, 4, 9,
    76, 1, 114, 4, 9,
    78, 2, 117, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Void, 0x80000000 | 65, 66,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 69, 70,
    QMetaType::QString, QMetaType::Int, 15,
    QMetaType::Void, 0x80000000 | 69, 72,
    QMetaType::Void, 0x80000000 | 69, 74,
    QMetaType::Void, QMetaType::Int, 15,
    QMetaType::Void, QMetaType::QString, 77,
    QMetaType::Void, QMetaType::Int, QMetaType::QString, 15, 79,

 // properties: name, type, flags
    20, QMetaType::Int, 0x02005001, 		 // int Count

 // enums: name, flags, count, data
    30, 0x0, 3, 129, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject PLMLineCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__PLMLineCollection, 0, 0, 0 }
};

void *PLMLineCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::PLMLineCollection"))
        return static_cast<void*>(const_cast<PLMLineCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}
static const uint qt_meta_data_LEMMATIZERLib__IPLMLineCollection[] = {

 // content:
    7, // revision
    80,  // classname
    0, 0, // classinfo
    12, 14, // methods
    2, 120, // properties
    1, 126, // enums/sets
    0, 0, // constructors
    0, // flags
    3, // signal count

// signal: name, argc, parameters, tag, flags
    3, 4, 74, 4, 5,
    9, 1, 83, 4, 5,
    11, 3, 86, 4, 5,

// slot: name, argc, parameters, tag, flags
    64, 1, 93, 4, 9,
    67, 0, 96, 4, 9,
    68, 1, 97, 4, 9,
    38, 1, 100, 4, 9,
    71, 1, 103, 4, 9,
    73, 1, 106, 4, 9,
    75, 1, 109, 4, 9,
    76, 1, 112, 4, 9,
    78, 2, 115, 4, 9,

// signal: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, 5, 6, 7, 8,
    QMetaType::Void, QMetaType::QString, 10,
    QMetaType::Void, QMetaType::QString, QMetaType::Int, QMetaType::VoidStar, 10, 12, 13,

// slot: parameters
    QMetaType::Void, 0x80000000 | 65, 66,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 69, 70,
    QMetaType::QString, QMetaType::Int, 15,
    QMetaType::Void, 0x80000000 | 69, 72,
    QMetaType::Void, 0x80000000 | 69, 74,
    QMetaType::Void, QMetaType::Int, 15,
    QMetaType::Void, QMetaType::QString, 77,
    QMetaType::Void, QMetaType::Int, QMetaType::QString, 15, 79,

 // properties: name, type, flags
    20, QMetaType::Int, 0x02005001, 		 // int Count
    35, QMetaType::QString, 0x0a055003, 		 // QString control

 // enums: name, flags, count, data
    30, 0x0, 3, 130, 

 // enum data: key, value
    31, uint(LEMMATIZERLib::idlFinance),
    32, uint(LEMMATIZERLib::idlComputer),
    33, uint(LEMMATIZERLib::idlLiterature),
    0 // eod
};

const QMetaObject IPLMLineCollection::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_all.data,
qt_meta_data_LEMMATIZERLib__IPLMLineCollection, 0, 0, 0 }
};

void *IPLMLineCollection::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, "LEMMATIZERLib::IPLMLineCollection"))
        return static_cast<void*>(const_cast<IPLMLineCollection*>(this));
    return QAxObject::qt_metacast(_clname);
}

